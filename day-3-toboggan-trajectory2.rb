# --- Part Two ---
# Time to check the rest of the slopes - you need to minimize the probability of a sudden arboreal stop, after all.

# Determine the number of trees you would encounter if, for each of the following slopes, you start at the top-left corner and traverse the map all the way to the bottom:

# Right 1, down 1.
# Right 3, down 1. (This is the slope you already checked.)
# Right 5, down 1.
# Right 7, down 1.
# Right 1, down 2.
# In the above example, these slopes would find 2, 7, 3, 4, and 2 tree(s) respectively; multiplied together, these produce the answer 336.

# What do you get if you multiply together the number of trees encountered on each of the listed slopes?

puzzle_input =


trajectories = [[1, 1], [3, 1], [5, 1], [7, 1], [1, 2]]

def count_trees(slope, right, down)
  x = 0
  y = 0
  count = 0

  while y < slope.length - 1
    if (x + right) >= slope[0].length
      remainder = right - (slope[0].length - x)
      x = remainder
    else
      x += right
    end
    y += down

    if slope[y][x] == "#"
      count += 1
    end
  end

  count
end

def count_trees_multiple_runs(puzzle_input, trajectories)
  counts = []
  trajectories.each do |trajectory|
    count = count_trees(puzzle_input, trajectory[0], trajectory[1])
    counts.push(count)
  end
  counts.reduce(:*)
end

p count_trees_multiple_runs(puzzle_input, trajectories)